<?php

namespace AppBundle\Entity;

use Symfony\Component\Security\Core\User\UserInterface;
use Symfony\Component\Security\Core\User\UserProviderInterface;
use Symfony\Component\Security\Core\Exception\UsernameNotFoundException;
use Symfony\Component\Security\Core\Exception\UnsupportedUserException;
use Doctrine\ORM\EntityRepository;
use Symfony\Component\HttpFoundation\Session\Session;

/**
 * JurylidRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class JurylidRepository extends EntityRepository
{
    public function getTotaalAantalIngeschrevenJuryleden()
    {
        $ingeschrevenJuryleden = $this->createQueryBuilder('u')
            ->select('count(u.id)')
            ->getQuery()
            ->getSingleScalarResult();
        return $ingeschrevenJuryleden;
    }

    public function getIngeschrevenJuryleden($user, $orderBy = 'brevet')
    {
        $ingeschrevenJuryleden = $this->createQueryBuilder('u')
            ->select('count(u.id)')
            ->Where('u.user = :user')
            ->orderBy('u.' . $orderBy)
            ->setParameters([
                'user' => $user,
            ])
            ->getQuery()
            ->getSingleScalarResult();
        return $ingeschrevenJuryleden;
    }

    public function getIngeschrevenJuryledenPerUser($user, $orderBy = 'brevet')
    {
        $ingeschrevenJuryleden = $this->createQueryBuilder('u')
            ->Where('u.user = :user')
            ->orderBy('u.' . $orderBy)
            ->setParameters([
                'user' => $user,
            ])
            ->getQuery()
            ->getResult();
        return $ingeschrevenJuryleden;
    }

    public function getAllJuryleden($orderBy = 'brevet')
    {
        $results = $this->createQueryBuilder('u')
            ->orderBy('u.' . $orderBy)
            ->getQuery()
            ->getResult();
        return $results;
    }
}